name: Build and Release Binary

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64 # optional, Windows ARM64 is tricky
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25"

      - name: Run tests
        run: make test

      - name: Build binary (${{ matrix.goos }}-${{ matrix.goarch }})
        run: |
          mkdir -p build
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/sps-${{ matrix.goos }}-${{ matrix.goarch }}$EXT ./app/main.go

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: sps-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/sps-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: List downloaded files
        run: ls -R ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
